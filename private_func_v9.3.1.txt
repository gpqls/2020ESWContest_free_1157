/*
 * private_func.c
 *
 *  Created on: 2020. 8. 27.
 *      Author: User
 */


/*
 * privatefunc.c
 *
 *  Created on: 2020. 6. 4.
 *      Author: User
 */


#include "gpio.h"
#include "tim.h"
#include "usart.h"

/* USER CODE BEGIN PV */


uint8_t rx_data[10]; //imu data
uint8_t rx_data2;//passive control data
float Roll,Pitch,Yaw;
signed short EulerRoll,EulerPitch,EulerYaw;
float rr;// imusensor roll값
float yy;//Yaw값
float saveyy;// yaw값 저장
float ysy;// yy-270



/* USER CODE END PV */



/**********************낭떠러지 90도 회전 함수 시작***********************/

float cliffrotate_90_2(void){//초음파센서 거리계산 함수


	ysy=saveyy-270;//90도 넘어가는 yaw값

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_SET);//RED LED off

	//앞바퀴시작
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);//tim3 channel1 on
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);//tim3 channel4 on

	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);//tim4 channel1 on
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);//tim4 channel4 on
	//뒷바퀴시작
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);//tim1 channel2 on
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);//tim1 channel3 on

	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);//tim4 channel2 on
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);//tim4 channel3 on


	__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_1,0);
	__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_4,0);
	__HAL_TIM_SET_COMPARE(&htim4,TIM_CHANNEL_1,9000-1);
	__HAL_TIM_SET_COMPARE(&htim4,TIM_CHANNEL_4,0);

	__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_2,9000-1);
	__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_3,0);
	__HAL_TIM_SET_COMPARE(&htim4,TIM_CHANNEL_2,0);
	__HAL_TIM_SET_COMPARE(&htim4,TIM_CHANNEL_3,0);


	if(saveyy>90&&saveyy<180){// 90도 회전후 리셋
		if(0>yy&&yy>ysy){
			return main();// MCU리셋 함수
		}
	}
	else{
		if(yy>saveyy+90){
			return main();// MCU리셋 함수
		}
	}

}

/**********************90도 회전 함수 끝***********************/


float WTF_driving(void){


	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, GPIO_PIN_SET);//RED LED off
	//앞바퀴시작
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);//tim3 channel1 on
	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);//tim3 channel4 on

	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);//tim4 channel1 on
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);//tim4 channel4 on
	//뒷바퀴시작
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);//tim1 channel2 on
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);//tim1 channel3 on

	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);//tim4 channel2 on
	HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);//tim4 channel3 on

	__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_1,0);
	__HAL_TIM_SET_COMPARE(&htim3,TIM_CHANNEL_4,6000-1);
	__HAL_TIM_SET_COMPARE(&htim4,TIM_CHANNEL_1,0);
	__HAL_TIM_SET_COMPARE(&htim4,TIM_CHANNEL_4,6000-1);

	__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_2,0);
	__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_3,7000-1);
	__HAL_TIM_SET_COMPARE(&htim4,TIM_CHANNEL_2,0);
	__HAL_TIM_SET_COMPARE(&htim4,TIM_CHANNEL_3,7000-1);



}





void IT_PD2_Start(void){
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_3, GPIO_PIN_SET);
	HAL_Delay(100);
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_3, GPIO_PIN_RESET);
}






void IT_PD1_Start(void){
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_SET);//PC12 falling code
	HAL_Delay(100);
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_RESET);
}






void reset_code(void){//IT_PE0_Start

	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_SET);//PB9 falling code
	HAL_Delay(100);
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_9, GPIO_PIN_RESET);

}



void delay_1s(void){// 딜레이 함수

	HAL_Delay(1000);

}

void delay_f(void){// 딜레이 함수

	for(int i=0;i<3;i++){

		HAL_Delay(1000);

	}
}



